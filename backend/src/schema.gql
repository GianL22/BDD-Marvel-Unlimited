# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CreditCard {
  cardNumber: String!
  last4Digits: Int!
}

type Membership {
  id: ID!
  price: Float!
  type: String!
  description: String!
}

type Suscription {
  userId: ID!
  membershipId: ID!
  dateSuscription: DateTime!
  dateEnd: DateTime!
  isActive: Boolean!
  membership: Membership!
  user: User!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Country {
  description: String!
  cities: [City!]!
}

type City {
  id: ID!
  description: String!
  country: Country!
}

type User {
  id: ID!
  username: String!
  name: String!
  lastName: String!
  email: String!
  birthdate: String!
  isActive: Boolean!
  creditCard: CreditCard!
  city: City!
  profiles: [Profile!]!
  getMembership: [Membership!]!
}

type Profile {
  id: ID!
  userId: ID!
  nickname: String!
  language: String!
  hourConexion: Int!
  device: String!
  timeWatched: Int!
  emailProfile: String!
  avatar: String!
  isActive: Boolean!
}

type AuthResponse {
  token: String!
  user: User!
}

type Color {
  id: ID!
  description: String!
}

type Query {
  users: [User!]!
  userById(id: ID!): User!
  userByEmail(email: String!): User!
  profileByUser: [Profile!]!
  countries: [Country!]!
  reportSuscriptions: [Suscription!]!
  suscriptionByUser: Suscription!
  memberships: [Membership!]!
  membership(id: String!): Membership!
  revalite: AuthResponse!
  colors: [Color!]!
}

type Mutation {
  updateUser(updateUserInput: UpdateUserInput!): User!
  blockUser(id: ID!): User!
  createProfile(createProfileInput: CreateProfileInput!): Profile!
  updateProfile(updateProfileInput: UpdateProfileInput!): Profile!
  blockProfile(id: ID!): Profile!
  createSuscription(createSuscriptionInput: CreateSuscriptionInput!): Suscription!
  changeSuscription(createSuscriptionInput: CreateSuscriptionInput!): Suscription!
  createMembership(createMembershipInput: CreateMembershipInput!): Membership!
  removeMembership(id: String!): Membership!
  signup(signupInput: SignupInput!, creditCardInput: CreateCreditCardInput!, suscriptionInput: CreateSuscriptionInput!): AuthResponse!
  login(loginInput: LoginInput!): AuthResponse!
  createCreditCard(createCreditCardInput: CreateCreditCardInput!): CreditCard!
  createColor(createColorInput: CreateColorInput!): Color!
}

input UpdateUserInput {
  username: String
  name: String
  lastName: String
  email: String
  password: String
  birthdate: String
  id: ID!
  isActive: Boolean
}

input CreateProfileInput {
  nickname: String!
  language: String!
  device: String!
  emailProfile: String!
  avatar: String!
}

input UpdateProfileInput {
  nickname: String
  language: String
  device: String
  emailProfile: String
  avatar: String
  id: ID!
  isActive: Boolean
  hourConexion: Int
  timeWatched: Int
}

input CreateSuscriptionInput {
  membership: ID!
  dateSuscription: String!
}

input CreateMembershipInput {
  price: Float!
  type: TypeMemberships!
  description: String!
}

enum TypeMemberships {
  Gold
  Premium
  VIP
}

input SignupInput {
  username: String!
  name: String!
  lastName: String!
  email: String!
  password: String!
  birthdate: String!
  city: ID!
}

input CreateCreditCardInput {
  cardNumber: String!
  ownerName: String!
  ownerLastName: String!
  expiration: String!
  cvv: Int!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateColorInput {
  """Se guarda el nombre del color"""
  description: String!
}